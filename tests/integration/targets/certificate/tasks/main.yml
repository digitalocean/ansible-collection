# code: language=ansible
---
- block:

    - name: Verify API token
      ansible.builtin.assert:
        that:
          - digitalocean_token is string
          - digitalocean_token | length > 0
        fail_msg: digitalocean_token should be defined in tests/integration/integration_config.yml

    - name: Get certificates
      digitalocean.cloud.certificates_info:
        token: "{{ digitalocean_token }}"
      register: result

    - name: Create custom certificate
      digitalocean.cloud.certificate:
        token: "{{ digitalocean_token }}"
        state: present
        name: "{{ custom_cert.cn }}"
        private_key: "{{ custom_cert.key }}"
        leaf_certificate: "{{ custom_cert.crt }}"
      register: result

    - name: Verify certificate
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg is string
          - result.msg == "Certificate " ~ custom_cert.cn ~ " created"
          - result.certificate is defined
          - result.certificate.created_at is string
          - result.certificate.dns_names is iterable
          - result.certificate.dns_names.0 == custom_cert.cn
          - result.certificate.id is string
          - result.certificate.name == custom_cert.cn
          - result.certificate.not_after is string
          - result.certificate.sha1_fingerprint is string
          - result.certificate.state == "verified"
          - result.certificate.type == "custom"

    - name: Pause for 10 seconds
      ansible.builtin.pause:
        seconds: 10

    - name: Delete custom certificate
      digitalocean.cloud.certificate:
        token: "{{ digitalocean_token }}"
        state: absent
        name: "{{ custom_cert.cn }}"
        private_key: "{{ custom_cert.key }}"
        leaf_certificate: "{{ custom_cert.crt }}"
      register: result

    - name: Verify certificate
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg is string
          - result.msg == "Certificate " ~ custom_cert.cn ~ " deleted"

    - name: Create Let's Encrypt certificate
      digitalocean.cloud.certificate:
        token: "{{ digitalocean_token }}"
        state: present
        name: "{{ lets_encrypt_cert.cn }}"
        dns_names: [ "{{ lets_encrypt_cert.cn }}" ]
      register: result

    - name: Verify certificate
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg is string
          - result.msg == "Certificate " ~ lets_encrypt_cert.cn ~ " created"
          - result.certificate is defined
          - result.certificate.created_at is string
          - result.certificate.dns_names is iterable
          - result.certificate.dns_names.0 == lets_encrypt_cert.cn
          - result.certificate.id is string
          - result.certificate.name == lets_encrypt_cert.cn
          - result.certificate.not_after is string
          - result.certificate.sha1_fingerprint is string
          - result.certificate.state == "verified"
          - result.certificate.type == "lets_encrypt"

  always:

    - name: Delete custom certificate (leftover)
      digitalocean.cloud.certificate:
        token: "{{ digitalocean_token }}"
        state: absent
        name: "{{ custom_cert.cn }}"
        private_key: "{{ custom_cert.key }}"
        leaf_certificate: "{{ custom_cert.crt }}"
      register: result
      ignore_errors: true

    - name: Delete Let's Encrypt certificate (leftover)
      digitalocean.cloud.certificate:
        token: "{{ digitalocean_token }}"
        state: absent
        name: "{{ lets_encrypt_cert.cn }}"
        dns_names: [ "{{ lets_encrypt_cert.cn }}" ]
      register: result
      ignore_errors: true

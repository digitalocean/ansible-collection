---
# code: language=ansible
- name: 01_create_delete_redis | Testing block
  block:
    - name: 01_create_delete_redis | Create database cluster
      digitalocean.cloud.database_cluster:
        state: present
        token: "{{ digitalocean_token }}"
        name: "{{ database_name }}"
        region: "{{ region }}"
        engine: "{{ engine }}"
        size: "{{ size }}"
        num_nodes: "{{ num_nodes }}"
        timeout: 600
      register: result

    - name: 01_create_delete_redis | Verify create database cluster
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg == "Created " ~ engine ~ " database cluster " ~ database_name ~ " (" ~ result.database.id ~ ") in " ~ region
          - result.database.name == database_name
          - result.database.engine == engine
          - result.database.num_nodes == num_nodes
          - result.database.region == region

    - name: 01_create_delete_redis | Create database cluster again
      digitalocean.cloud.database_cluster:
        state: present
        token: "{{ digitalocean_token }}"
        name: "{{ database_name }}"
        region: "{{ region }}"
        engine: "{{ engine }}"
        size: "{{ size }}"
        num_nodes: "{{ num_nodes }}"
      register: result

    - name: 01_create_delete_redis | Verify create database cluster idempotency
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.msg == engine ~ " database cluster " ~ database_name ~ " (" ~ result.database.id ~ ") in " ~ region ~ " exists"

    - name: 01_create_delete_redis | Delete database cluster
      digitalocean.cloud.database_cluster:
        state: absent
        token: "{{ digitalocean_token }}"
        name: "{{ database_name }}"
        region: "{{ region }}"
        engine: "{{ engine }}"
      register: result

    - name: 01_create_delete_redis | Verify delete database cluster
      ansible.builtin.assert:
        that:
          - result.changed
          - result.msg == "Deleted " ~ engine ~ " database cluster " ~ database_name ~ " (" ~ result.database.id ~ ") in " ~ region
